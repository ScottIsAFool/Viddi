<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:Viddy.Controls">

    <Style TargetType="controls:ProfilePictureControl">
        <Setter Property="Height"
                Value="45" />
        <Setter Property="Width"
                Value="45" />
        <Setter Property="Background"
                Value="{ThemeResource ButtonBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource ButtonBackgroundBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="DisplayDefaultAvatar"
                Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ProfilePictureControl">
                    <controls:CustomButton Style="{StaticResource EmptyButtonStyle}"
                                           IsHitTestVisible="{TemplateBinding IsHitTestVisible}"
                                           TapCommand="{TemplateBinding TappedCommand}">
                        <Viewbox Stretch="UniformToFill"
                                 StretchDirection="DownOnly"
                                 Width="{TemplateBinding Width}"
                                 Height="{TemplateBinding Height}">
                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="45"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Padding="2">
                                <Grid>
                                    <Grid x:Name="PlaceHolderGrid">
                                        <Border CornerRadius="45"
                                                Background="{TemplateBinding Background}">
                                            <TextBlock FontFamily="{StaticResource SegoeUISymbolsFont}"
                                                       Text="&#xE13D;"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       Foreground="{ThemeResource DefaultUserBrush}"
                                                       FontSize="26.667" 
                                                       Tag="{TemplateBinding DisplayDefaultAvatar}"
                                                       Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityConverter}}"/>
                                        </Border>
                                    </Grid>
                                    <Ellipse Stretch="Fill"
                                             Width="{TemplateBinding Width}"
                                             Height="{TemplateBinding Height}"
                                             x:Name="ImageEllipse"
                                             Tag="{TemplateBinding AvatarUrl}">
                                        <Ellipse.Fill>
                                            <ImageBrush ImageSource="{Binding Tag, ElementName=ImageEllipse}"
                                                        Stretch="UniformToFill" />
                                        </Ellipse.Fill>
                                    </Ellipse>

                                    <Grid Tag="{TemplateBinding IsChanging}"
                                          Visibility="{Binding Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource VisibilityConverter}}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch"
                                          Margin="-2,-2,0,0">
                                        <Ellipse Stretch="Fill"
                                                 Fill="#C4000000" />
                                        <Viewbox Stretch="UniformToFill"
                                                 StretchDirection="DownOnly">
                                            <ProgressRing Height="{TemplateBinding Height}"
                                                          Width="{TemplateBinding Width}"
                                                          IsActive="{TemplateBinding IsChanging}"
                                                          Background="Transparent"
                                                          Margin="6"
                                                          Foreground="{ThemeResource PhoneAccentBrush}" />
                                        </Viewbox>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Viewbox>
                    </controls:CustomButton>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:LoadingListView">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="TabNavigation"
                Value="Once" />
        <Setter Property="IsSwipeEnabled"
                Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollMode"
                Value="Disabled" />
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled"
                Value="False" />
        <Setter Property="ScrollViewer.VerticalScrollMode"
                Value="Enabled" />
        <Setter Property="ScrollViewer.IsVerticalRailEnabled"
                Value="False" />
        <Setter Property="ScrollViewer.ZoomMode"
                Value="Disabled" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled"
                Value="False" />
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange"
                Value="True" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="MinHeight"
                            Value="0" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerTransitions">
            <Setter.Value>
                <TransitionCollection>
                    <AddDeleteThemeTransition />
                    <ContentThemeTransition />
                    <ReorderThemeTransition />
                    <EntranceThemeTransition IsStaggeringEnabled="False" />
                </TransitionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <ItemsStackPanel Orientation="Vertical" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="InitialisingContent">
            <Setter.Value>
                <DataTemplate>
                    <Grid VerticalAlignment="Center">
                        <StackPanel Orientation="Vertical">
                            <ProgressRing Height="60"
                                          Width="60"
                                          IsActive="{Binding}"
                                          Background="Transparent" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="EmptyContent">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="Nothing to see here"
                               Style="{StaticResource BodyTextBlockStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="GoToTopButtonTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Button Style="{StaticResource EmptyButtonStyle}"
                            Margin="19">
                        <Grid>
                            <Viewbox Stretch="UniformToFill"
                                     StretchDirection="DownOnly"
                                     Width="50"
                                     Height="50">
                                <Border BorderThickness="1"
                                        BorderBrush="{ThemeResource ButtonBackgroundBrush}"
                                        Width="50"
                                     Height="50"
									 CornerRadius="45"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Padding="2">
                                            <Border CornerRadius="45"
                                                    Background="{ThemeResource ButtonBackgroundBrush}">
                                                <TextBlock FontFamily="{StaticResource SegoeUISymbolsFont}"
                                                           Text="&#xE1FE;"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"

                                                           Foreground="{ThemeResource DefaultUserBrush}"
                                                           FontSize="26.667" Margin="1,0,0,3" />
                                            </Border>
                                   
                                </Border>
                            </Viewbox>
                        </Grid>
                    </Button>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:LoadingListView">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="GoToTopButtonGroup">
                                <VisualState x:Name="ShowGoToTopButton">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="GoToTopButtonPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="GoToTopButtonPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.7"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="HideGoToTopButton" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <ScrollViewer x:Name="ScrollViewer"
                                          TabNavigation="{TemplateBinding TabNavigation}"
                                          HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                                          VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                          IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                                          IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                                          IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                                          ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                          IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                                          BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                                          AutomationProperties.AccessibilityView="Raw">
                                <Grid Tag="{TemplateBinding IsInitialising}"
                                      x:Name="ContainerGrid">
                                    <Grid x:Name="InitialisedContent"
                                          Tag="{TemplateBinding IsEmpty}"
                                          Visibility="{Binding Tag, ElementName=ContainerGrid, Converter={StaticResource InverseVisibilityConverter}}">
                                        <ItemsPresenter Header="{TemplateBinding Header}"
                                                        HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                                        HeaderTransitions="{TemplateBinding HeaderTransitions}"
                                                        Footer="{TemplateBinding Footer}"
                                                        FooterTemplate="{TemplateBinding FooterTemplate}"
                                                        FooterTransitions="{TemplateBinding FooterTransitions}"
                                                        Padding="{TemplateBinding Padding}" />
                                        <ContentControl ContentTemplate="{TemplateBinding EmptyContent}"
                                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                        Style="{TemplateBinding EmptyContentStyle}"
                                                        Visibility="{Binding Tag, ElementName=InitialisedContent, Converter={StaticResource VisibilityConverter}}" />
                                    </Grid>
                                    <Grid x:Name="InitialisingContent"
                                          Visibility="{Binding Tag, ElementName=ContainerGrid, Converter={StaticResource VisibilityConverter}}">
                                        <ContentControl ContentTemplate="{TemplateBinding InitialisingContent}"
                                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                        Style="{TemplateBinding InitialisingContentStyle}"
                                                        DataContext="{TemplateBinding IsInitialising}" />
                                    </Grid>
                                </Grid>
                            </ScrollViewer>
                            <ContentPresenter x:Name="GoToTopButtonPresenter"
                                              Content="{TemplateBinding GoToTopButton}"
                                              ContentTemplate="{TemplateBinding GoToTopButtonTemplate}"
                                              VerticalAlignment="Top"
                                              HorizontalAlignment="Right"
                                              Opacity="0"
                                              Visibility="Collapsed" />
                            <!---->
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="CheckBoxBackgroundThemeBrush"
                     Color="Transparent" />
    <Thickness x:Key="PhoneBorderThickness">2.5</Thickness>
    <x:Double x:Key="TextStyleLargeFontSize">18.14</x:Double>
    <FontFamily x:Key="PhoneFontFamilyNormal">Segoe WP</FontFamily>
    <Thickness x:Key="PhoneTouchTargetLargeOverhang">0,16</Thickness>
    <Style TargetType="controls:FollowingControl">
        <Setter Property="Background"
                Value="{ThemeResource CheckBoxBackgroundThemeBrush}" />
        <Setter Property="BorderBrush"
                Value="{ThemeResource CheckBoxBorderThemeBrush}" />
        <Setter Property="BorderThickness"
                Value="{ThemeResource PhoneBorderThickness}" />
        <Setter Property="FontSize"
                Value="{ThemeResource TextStyleLargeFontSize}" />
        <Setter Property="FontFamily"
                Value="{ThemeResource PhoneFontFamilyNormal}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="FollowingText"
                Value="follow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:FollowingControl">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Pressed"
                                                      To="PointerOver">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="PointerOver"
                                                      To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="Pressed"
                                                      To="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="Grid" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="PointerOver" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="Grid" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background"
                                                                       Storyboard.TargetName="CheckBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource CheckBoxPressedBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0.5"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="CheckBackground" />
                                        <DoubleAnimation Duration="0"
                                                         To="0.5"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FollowingText" />

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CheckedPointerOver" />
                                <VisualState x:Name="CheckedPressed" />
                                <VisualState x:Name="CheckedDisabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush)"
                                                                       Storyboard.TargetName="CheckBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource PhoneAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)"
                                                                       Storyboard.TargetName="FollowingText">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource PhoneAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0"
                                                         To="0.5"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FollowingText" />
                                        <DoubleAnimation Duration="0"
                                                         To="0.5"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="CheckBackground" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="IndeterminatePointerOver" />
                                <VisualState x:Name="IndeterminatePressed" />
                                <VisualState x:Name="IndeterminateDisabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground)"
                                                                       Storyboard.TargetName="FollowingText">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource PhoneAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush)"
                                                                       Storyboard.TargetName="CheckBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource PhoneAccentBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Grid">
                            <Border x:Name="CheckBackground"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    HorizontalAlignment="Left"
                                    IsHitTestVisible="False"
                                    VerticalAlignment="Center"
                                    BorderBrush="{ThemeResource SubtleBrush}"
                                    CornerRadius="10">
                                <TextBlock Text="{TemplateBinding FollowingText}"
                                           Padding="4,0,4,2"
                                           VerticalAlignment="Top"
                                           Margin="4,0"
                                           Foreground="{ThemeResource SubtleBrush}"
                                           x:Name="FollowingText" />
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:RotateContentControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:RotateContentControl">
                    <ContentControl x:Name="Content"
                                    Content="{TemplateBinding Content}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
