<local:PinnableBasePage x:Class="Viddy.Views.ChannelView"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:local="using:Viddy.Views"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
                        xmlns:behaviours="using:Viddy.Behaviours"
                        xmlns:core="using:Microsoft.Xaml.Interactions.Core"
                        xmlns:controls="using:Viddy.Controls"
                        mc:Ignorable="d"
                        Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                        DataContext="{Binding Channel, Source={StaticResource Locator}}">
    <interactivity:Interaction.Behaviors>
        <behaviours:StatusBarBehavior IsVisible="False" />
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{Binding PageLoadedCommand}" />
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>

    <local:BasePage.BottomAppBar>
        <CommandBar>
            <CommandBar.PrimaryCommands>
                <AppBarButton Label="home"
                              x:Uid="AppBarHome"
                              Icon="Home"
                              Visibility="{Binding ShowHomeButton, Converter={StaticResource VisibilityConverter}}"
                              Command="{Binding NavigateHomeCommand}" />
                <AppBarButton Label="{Binding Channel.IsPinned, Converter={StaticResource PinUnpinConverter}}"
                              x:Name="PinButton"
                              Click="PinButton_OnClick">
                    <AppBarButton.Icon>
                        <SymbolIcon Symbol="{Binding Channel.IsPinned, Converter={StaticResource PinUnpinSymbolConverter}}" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Label="refresh"
                              x:Uid="AppBarRefresh"
                              Command="{Binding Channel.RefreshCommand}"
                              Icon="Refresh" />
                <AppBarButton Label="add video"
                              x:Uid="AppBarRecord"
                              Icon="Video"
                              Command="{Binding AddVideoCommand}" />
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </local:BasePage.BottomAppBar>

    <Grid>
        <Grid Margin="-1200,-1200,0,0">
            <controls:TileControl x:Name="MediumTile"
                                  ImageUrl="{Binding Channel.AvatarUrl}" />
            <controls:TileControl x:Name="WideTile"
                                  ImageUrl="{Binding Channel.CoverUrl}"
                                  Width="691" />
        </Grid>
        <controls:ProfileHeaderControl DataContext="{Binding EmptyChannel}"
                                       Visibility="{Binding Channel.ProgressIsVisible, Source={StaticResource Locator}, Converter={StaticResource VisibilityConverter}}" />
        <controls:LoadingListView ItemsSource="{Binding Channel.Items}"
                                  ItemTemplateSelector="{StaticResource VideoTemplateSelector}"
                                  IsEmpty="{Binding Channel.IsEmpty}"
                                  IsInitialising="{Binding Channel.ProgressIsVisible}"
                                  Header="{Binding}">
            <controls:LoadingListView.HeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <controls:ProfileHeaderControl DataContext="{Binding Channel}" />
                        <controls:FollowingControl IsEnabled="{Binding Channel.CanFollow}"
                                                   FollowingText="{Binding Channel.FollowingText}"
                                                   IsChecked="{Binding Channel.IsFollowedByMe, Mode=TwoWay}"
                                                   Visibility="{Binding Auth.IsLoggedIn, Source={StaticResource Locator}, Converter={StaticResource VisibilityConverter}}"
                                                   Margin="19,-5,19,12" />
                        <Grid Visibility="{Binding Channel.HasErrors, Converter={StaticResource InverseVisibilityConverter}}">
                            <TextBlock Text="This channel hasn't got any content yet."
                                       x:Uid="LabelNoChannelContent"
                                       Style="{StaticResource BodyTextBlockStyle}"
                                       Margin="19"
                                       TextWrapping="WrapWholeWords"
                                       TextAlignment="Center"
                                       Visibility="{Binding Channel.IsEmpty, Converter={StaticResource VisibilityConverter}}" />
                        </Grid>
                        <ContentControl ContentTemplate="{StaticResource LoadFailedTemplate}"
                                        Visibility="{Binding Channel.HasErrors, Converter={StaticResource VisibilityConverter}}" />
                    </StackPanel>
                </DataTemplate>
            </controls:LoadingListView.HeaderTemplate>
            <controls:LoadingListView.FooterTemplate>
                <DataTemplate>
                    <controls:LoadMoreControl DataContext="{Binding Channel}" />
                </DataTemplate>
            </controls:LoadingListView.FooterTemplate>
            <controls:LoadingListView.EmptyContent>
                <DataTemplate>
                    <Grid />
                </DataTemplate>
            </controls:LoadingListView.EmptyContent>
        </controls:LoadingListView>
    </Grid>
</local:PinnableBasePage>
